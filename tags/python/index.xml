<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on xudai&#39;s blog</title>
    <link>https://xudai3.github.io/tags/python/</link>
    <description>Recent content in python on xudai&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 23 Nov 2020 17:13:18 +0800</lastBuildDate><atom:link href="https://xudai3.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fabric升级到fabric2</title>
      <link>https://xudai3.github.io/posts/fabric%E5%8D%87%E7%BA%A7%E5%88%B0fabric2/</link>
      <pubDate>Mon, 23 Nov 2020 17:13:18 +0800</pubDate>
      
      <guid>https://xudai3.github.io/posts/fabric%E5%8D%87%E7%BA%A7%E5%88%B0fabric2/</guid>
      <description>fabric升级到fabric2 fabric2相比于fabric改动很多，并且不能向下兼容
安装 可以用pip安装fabric的2.X版本，也可以安装fabric2，都是一样的，用fabric2为了区分之前的版本，fabric2改动特别大
fabric=&amp;gt;fabric2 改动 完整改动还是得看官网文档Upgrading from 1.x，这里只列举部分常用的
env 移除了env，使用fabric.Config来进行配置
env.use_ssh_config不再需要，fabric2默认就会使用ssh_config
sudo密码 之前用env.password来配置sudo的密码，现在可以用
方法1 使用全局的connection，并配置config sudo_pass = &amp;#39;xxxxxx&amp;#39; fab_user = &amp;#39;xudai&amp;#39; config = Config(overrides={&amp;#39;sudo&amp;#39;: {&amp;#39;password&amp;#39;: sudo_pass}}) c = Connection(host=&amp;#39;xd&amp;#39;, config=config) @task def sample(ctx): c.sudo(&amp;#39;whoami&amp;#39;) 方法2 执行时修改config @task def sample(ctx): print(ctx.config) sudo(ctx) print(ctx.config) def sudo(ctx): ctx.config.sudo.password = sudo_pass 方法3 给sudo传参 @task def sample(c): c.sudo(&amp;#39;whoami&amp;#39;, password=os.environ.get(&amp;#39;SUDO_PASSWORD&amp;#39;)) 方法4 &amp;ndash;prompt-for-sudo-password 执行时加上这个参数，会让你先在命令行输入一次sudo password
方法5 配置config文件 run/local/sudo # fabric 1.X from fabric.api import ( local, run, sudo, ) local(&amp;#39;cmd&amp;#39;) run(&amp;#39;cmd&amp;#39;) sudo(&amp;#39;cmd&amp;#39;) # fabric 2.</description>
    </item>
    
  </channel>
</rss>
